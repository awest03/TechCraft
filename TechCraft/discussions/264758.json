[
  {
    "Id": "640791",
    "ThreadId": "264758",
    "Html": "\r\n<p>I'm curious...in techcraft, what happens when you generate a chunk?</p>\r\n<p>On my voxel engine, when chunks get generated, they have dark borders around them. &nbsp;They go away, of course, when the chunk gets rebuilt.</p>\r\n<p>I've tried simple rebuilding all the surrounding chunks when a chunk gets generated, but it takes too much time. &nbsp;How did you guys fix this issue?</p>\r\n",
    "PostedDate": "2011-07-11T18:52:17.27-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "641569",
    "ThreadId": "264758",
    "Html": "<p>Hi Tony...</p>\r\n<p>This issue is a complete pain - the solution is to make generating and lighting your chunks into separate stages. You should never light a chunk unless all it's surrounding chunks have been generated. Exactly how you do this is very dependant on how you deal with player movement and chunk generation. I've tried numerous way and still don't have a method that i'm entirely happy with.</p>\r\n<p>At the simplest you need to something along these lines....</p>\r\n<p>Say your draw distance is 10 chunks, you generate chunks when they are 10 away from the player. You only light the chunks when they're 9 away. This will ensure that when you come to do the lighting the surrounding chunks have been generated.</p>",
    "PostedDate": "2011-07-13T03:23:47.573-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "641947",
    "ThreadId": "264758",
    "Html": "<p>That's brilliant!<br />I saw that in the code, and I didn't understand what it was supposed to do at all, but now I understand!</p>\r\n<p>Thanks for your help!&nbsp;</p>",
    "PostedDate": "2011-07-13T14:39:33.867-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "643943",
    "ThreadId": "264758",
    "Html": "<p>I have a better idea.</p>\r\n<p>How about add a boolean Ready variable, that's something like this:</p>\r\n<p>\r\n<pre>public bool Ready\r\n        {\r\n            get\r\n            {\r\n                return (XIncreasing != null &amp;&amp; XIncreasing.DoneGenerated) &amp;&amp;\r\n                (XDecreasing != null &amp;&amp; XDecreasing.DoneGenerated) &amp;&amp;\r\n                (ZIncreasing != null &amp;&amp; ZIncreasing.DoneGenerated) &amp;&amp;\r\n                (ZDecreasing != null &amp;&amp; ZDecreasing.DoneGenerated);\r\n            }\r\n        }</pre>\r\n</p>\r\n<p>After the ChunkGenerator finishes generating a chunk, it sets the DoneGenerated variable in the chunk to true. &nbsp;Therefore, a chunk won't build (and therefore light) unless its neighbor chunks are generated.</p>",
    "PostedDate": "2011-07-18T13:39:36.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]